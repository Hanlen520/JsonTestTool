<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStripInForm.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACVMxz/nToh/6RBJv+qRSv/sEsv/7ROMv+wSi//q0Yr/6RAJv+dOiD/ljMb/44tFv+HJxH/giIN/wMF
        CEsAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAZUzG/+cOiH/pEAm/6pGK/+wSy//tE4y/7BLL/+qRiv/pEAm/505If+VMxv/ji0W/4go
        Ef+CIg3/AAAAPwAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAIHjRLUkZvmetnm87/aZ7S/22i1f9vpNf/aqDV/26j2P9vpdr/bqPZ/2Wa
        0v9fk8z/QGua/wsTG6QAAABAAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABRIgLTE3WoDPZpnK/2ic0P9soNL/b6TV/2+k1f9ontP/bqLU/2yg
        0/9qnc//ZZfL/12Pxf9EcJ//DhkjqgAAAEMAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIGCg8cLE1tsGKTw/9sntH/baDS/3Gk1P9xpdb/bqTV/2qf
        0v9toNL/ap3Q/2aXzP9jlcn/XI7C/0Vzo/8QGyewAAAATAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAcKDilGZIlYhbL/caPU/3Gj1P90ptX/dajW/3Om
        1/9vpNT/ap3P/2qe0P9pnM7/YpTI/1+Rxf9ai7//Snmq/xQiMb0AAABeAAAAGQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAACwAAABsZLD9mRG6X9niq2f94q9j/eKnX/3Wo
        1v9zpdT/caTV/22g0P9mms3/aJvN/2aZy/9fkMX/Wou//1WIvP9Sg7j/IztU2AIEBnkAAAAmAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAADQAAACIAAABBBAYJbTBQc+Ryoc7/g7Ti/36v
        3P96rNn/d6rW/3Gk1P9uodH/bJ/P/2KVyP9jl8n/Y5bI/1uMwP9ShLn/UIK3/1KFuv8zVnrvBQgLkAAA
        ADYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAABoAAAA/JycnizQ1NcU0RFTwV4Kt/429
        6/+Kuuf/grLf/32t2v94q9f/bqLR/2udz/9qnc3/YJLH/1+Rxf9gksX/V4i9/0x8sv9NfbT/S3yy/z1n
        kvwGCg+iAAAASQAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAhNzc3fk5OTs9bXFz7SUtP/z5k
        if+It+L/j7/s/4y96f+Gt+P/f7Dc/3mq1/9toND/aJrM/2mczP9gksT/WYq//1uNwP9Vh7v/Snmv/0h4
        r/9Hea//Snqr/xMiMb0BAQJhAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAIVJTUp9qamnxZGRk/1RU
        Vf88TV//X4q0/5TD7f+Lu+v/hrjo/4u75v+CtN//d6nX/22fz/9llsn/ZpjJ/2CRxP9Uhbr/V4i9/1OE
        uv9JerD/RHKp/0R0rP9Qgbb/JT9Z2wIDBXUAAAAjAAAAAAAAAAAAAAAAAAAAAwAAABpbW1qmfHx8/XBw
        cP9jY2P/VFhW/zpjg/+MueP/jsDt/3mu5v+BtOf/jr7o/4W14P92p9T/bZ/O/2OVx/9jlcf/X5HE/1OD
        uP9Sgrf/UoG3/0l6sP8/bab/QXGp/0+Ct/8xUHHrAwUIgwAAACsAAAAAAAAAAAAAAAAAAAANYGBgj4B/
        f/19fX3/dXR1/117V/85dkr/V4Kr/5nI8f+Btun/ZpnP/2WUv/+VxOz/hLTg/3Sm1P9rncz/X5HE/2CS
        xP9djsD/UoO3/059s/9OfrT/SXmv/z1rov8/bqb/Uoa9/zZbf/MEBgmPAAAAMQAAAAAAAAAAAAAAA2Bg
        YFeBgYDrjIyM/4iHh/9ji1z/OZco/zJzW/91oMj/l8fw/2+g0f8yX23/Q4Bx/2uXwP+Cs+D/caLS/2ia
        yv9djcH/Xo/B/1qKvv9PgLX/Snqw/0p8sf9KerD/R3eu/0l8s/9hmc//PGSM/AQHCpUAAAA2AAAAAAAA
        AAAAAAALeXl5speXl/+ampn/d5Nx/z6YK/8wnhr/NW9q/4Ov1f+KueL/Nl5+/x1ZFP80ijX/Snab/429
        5v9xo9L/ZZbI/1yNwP9nmcr/ZZjJ/1KCt/9Me7H/WYu//32v3/9mndH/irrn/5HA6/9DbJf/ChEZjgAA
        AC4AAAAAAAAAAHRzc0mWl5b3qKeo/5+inv9SmEP/MJoY/zGdGv81b2v/hLDX/4u64v8xWXb/HVsQ/y+F
        Mf9Od6D/o8/z/4275P9pm8v/bZ/P/3yv4P94qtv/ap7Q/2ye0P+Lu+j/jr7q/2+k1/+VxO7/kr/n/zxk
        jPcKERhoAAAAGgAAAAAAAAAAioqKiaqqqf+2tbX/gqN5/y2RFv8ulRb/MJgY/zN6U/9wm8L/iLXd/y9X
        bP8eXxH/L4A3/1V/pv+m0vT/ncnv/3ep1v+EteP/hrjm/4S36P9yp9f/kcLq/5jH7/+Rwu3/bqDO/3up
        0f9rlr7/LEtprwUICzAAAAAIAAAAAAAAAACZmZm7urm5/7++v/9jnFb/K40U/yyQFf8tlBb/MIow/1F6
        ov+Gsdb/Llpl/yJvE/8wfEL/Youy/6rU9v+fy/D/earX/5fG7f+VxO//jb/v/3ir2v+dy/H/o9D0/3qm
        z/9BYYLwL1J20TRbgrsbMEQtAAAACgAAAAEAAAAAAAAAAKmoqN/JyMj/x8bH/0aQNP8qiBL/KosT/zyY
        J/9Xp0b/RXWA/22Xvf9MeW3/a6Re/1GGc/9xmr//q9X3/4264v9+rdj/p9H2/6PR9f+Ux/L/dafV/4Sv
        1v+eyev/TXae/w8aJcMAAABHAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAtbS099XT1f/Pz8//MIUa/z+S
        Kv9zsGT/m8iQ/6fQnf+QvZP/W4eJ/4S5e/+AuXf/VIR//32myv+axOn/eqnQ/1aCn/+WwOL/qtb4/4Sw
        1/9EcoT/OVd1/1uCp/9CW3P+BQgLngAAADQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAC9vLz33Nvc/9jW
        1/8ugxn/mMOO/77at/+21q7/rtKl/6XOm/+dy5P/lsiK/4e+gf9WhYT/ibPV/5XD6f9PeJL/OmhD/1SB
        l/97pMj/TXmY/yh0LP9AQkT/PElW/1VYWvwAAACCAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMC/
        wN3f3d7/3t3f/0eMNf+rzaL/xNy+/7zYtf+01Kz/rNGj/6TNmv+bypD/jcCH/1mGhf+ex+f/mcbu/zJV
        aP9Abjb/UpRZ/0iFb/9Gk1L/NIwk/05NTv9MTU3/WVpa8wAAAHAAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxcTFteHf4P/l4+X/b6Fi/4u4fv/L4MX/wtu8/7vXtP+z06v/qs+h/6LMmP+Vw47/XoiH/57H
        5/+ayu7/MlRj/0ZzPP9hqFL/ZbpU/0yvOP9Ehjf/WFhY/1paWv9TUlLiAAAAWwAAABYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADKycp+4d/h/+vq6/+kv5z/YJxQ/9DizP/J3sP/wdq7/7nWsv+x0qn/qc6f/5vF
        lf9ii4r/n8jn/5fD6v8zVF7/TXlE/2eqWP9ruVr/QaQs/1Z7T/9iYWH/aWlp/0ZGRsMAAABAAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANLR0jrf3t707u3t/+Tm4v9nnFj/m8GR/9Diy//I3cL/v9m5/7fV
        sP+v0af/o8mc/2eOjP+fx+b/lcLo/zVUWv9WgEz/b61g/1quSP9JkDr/cXVw/25ubv9ycnL7MDAwiwAA
        ACIAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANva253r6+z/8fDw/7XKr/9soF3/uNKx/87g
        yP/G3MD/vte3/7bUr/+py6P/bJKR/6DI5v+RwOX/PFpY/2CKV/9pq1r/UJ0+/26KaP99fX7/fHx7/15e
        Xs8AAAA/AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA397fP+fm5+Dw7/D/8vHx/6XB
        nv9soF3/mb+P/83gyP/F27//vde2/7PRrf91mZb/n8fl/5G/4v9Rcmf/WZFM/1KYQf9ylWr/kI+Q/4iI
        iP97e3vxQEBAfgAAABoAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5ubmbe/u
        7vvy8fL/8vHy/7bMsf9nm1n/XZhN/4azeP+kx5v/stCq/5K0nP9Wf5r/YI2d/0ODP/9Uj0b/hp+A/6Kh
        of+ZmJn/j4+P/V1dXZ8AAAAhAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA6+nrfPHw8Pvy8fL/8vHy/+jq5v+mwZ//caFk/0eJNf8sexf/LX0X/0aKM/9om1r/jauG/7W4
        s/+zs7P/qKeo/5uam/1tbW2mAAAAIQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6+rrbe/u7+Dy8fL/8vHy//Dv8P/s6+z/6Ofo/+Pi4v/d3N3/2NfY/9HQ
        0f/Lysv/wcHC/7S0tf+dnZ3rdnZ2jwAAABoAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6enqP+jo6J3t7O307u3t/+7t7f/r6+v/6Ofo/+Pi
        4//b29v/0tHS/8fGx/+2t7f3lpaWsnd3d1cAAAANAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXk5Tre3d9+3Nzdtdva
        293Z2Nn30tLS98fHyN+5ubm7qKioiY6OjkkAAAALAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//4AAf/8AAH//AAB//gAAf/wAAH/8AAA/4AAAP4AAAD8AAAA+AAAAPAA
        AADgAAAA4AAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAB8AAAAfAAAAPwAAAD8AAAA/AAAAPwAAAD+AA
        AB/gAAAf8AAAP/gAAH/8AAD//gAB//+AB/8=
</value>
  </data>
</root>